basePath: /
definitions:
  Controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.Director:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  models.Movie:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      director:
        $ref: '#/definitions/models.Director'
      directorID:
        type: integer
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for CinemaHub.
  title: CinemaHub API
  version: "1.0"
paths:
  /movies:
    get:
      consumes:
      - application/json
      description: Get all movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Movie'
            type: array
      summary: Get all movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: Create a new movie
      parameters:
      - description: Movie to create
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Movie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Controllers.ErrorResponse'
      summary: Create a new movie
      tags:
      - movies
  /movies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a movie
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Controllers.ErrorResponse'
      summary: Delete a movie
      tags:
      - movies
    get:
      consumes:
      - application/json
      description: Get a movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Controllers.ErrorResponse'
      summary: Get a movie by ID
      tags:
      - movies
    put:
      consumes:
      - application/json
      description: Update a movie
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Controllers.ErrorResponse'
      summary: Update a movie
      tags:
      - movies
swagger: "2.0"
